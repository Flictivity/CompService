@using CompService.Core.Models
@using CompService.Client.Data
@using CompService.Core.Services
@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService Session;
@inject AppState AppState;
@inject UserInfoHolder UserInfoHolder;
@inject IUserService UserService;
<PageTitle>CompService.Client</PageTitle>
<MudThemeProvider Theme="new MudTheme {Palette = new Palette {Primary = _primaryColor, Secondary = _secondaryColor}}"/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudLayout>
    <MudAppBar>
        <MudSpacer></MudSpacer>
        @if (AppState.LoggedIn && UserInfoHolder.CurrentUser is not null)
        {
            <MudLink Href="/cabinet" Color="Color.Primary">
                <MudAvatar Color="Color.Secondary">@UserInfoHolder.CurrentUser.Name[0]</MudAvatar>
            </MudLink>
        }
    </MudAppBar>
    <MudPaper Style="overflow:hidden; position:relative;">
        <MudDrawer ClipMode="DrawerClipMode.Docked" Elevation="1" Variant="DrawerVariant.Mini" OpenMiniOnHover="true">
            <MudNavMenu>
                <MudTooltip Text="Домашняя страница" Placement="Placement.Right">
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home" Href="/index">
                        Домашняя страница
                    </MudNavLink>
                </MudTooltip>
                <MudTooltip Text="Заказы" Placement="Placement.Right">
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AddChart" Href="/index">
                        Заказы
                    </MudNavLink>
                </MudTooltip>
                <MudTooltip Text="Сотрудники" Placement="Placement.Right">
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Work" Href="/employees">
                        Сотрудники
                    </MudNavLink>
                </MudTooltip>
            </MudNavMenu>
        </MudDrawer>
    </MudPaper>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    readonly string _primaryColor = "#594AE2";
    readonly string _secondaryColor = "#000000";
    private User? _currentUser;
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        var user = await Session.GetItemAsync<User>("UserSession");
        if (user is not null)
            _currentUser = await UserService.GetUserByEmailAsync(user.Email);

        if (_currentUser is not null)
        {
            UserInfoHolder.CurrentUser = _currentUser;
            AppState.LoggedIn = true;
        }
        else
        {
            AppState.LoggedIn = false;
        }

        await base.OnInitializedAsync();
    }

}